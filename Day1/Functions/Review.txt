Functions

1.
	a. Method name should follow Pascal Coding
	b. Hardcoding of "Valid Password" should be avoided
	c. Instance should not be created here
	d. Function should have early return:

package CS1;

public class UserValidator {

    private Cryptographer cryptographer;

    public boolean CheckPassword(String userName, String password) {
        string const ValidPassword = "Valid Password";
        User user = UserGateway.findByName(userName);
        if (user == null)
        {
            return false;
        }

        String codedPhrase = user.getPhraseEncodedByPassword();

        String phrase = cryptographer.decrypt(codedPhrase, password);

        if (ValidPassword.equals(phrase)) {

            session.initialize();

            return true;
        }
    }
}



2. 
	a. Limit the scope of variable name
	b. variable temp can be renamed and
	c. The output string can be directly passed in Console.WriteLine(), assigning it again to name is not needed
	d. DataType should be explicit instead of var 

3.
	a. Function name is confusing, can just be IsDomNodePresent

5.
	a. Instead of type checking and then casting, we can use single casting using is keyword
	b. Texas string should be constant	
	c. Method overloading can be used 

6. 
	a. bool is false by default, bool temp=false is not needed
	b. string path can be passed to the method, temp flag is not needed
	c. there can be a separate method to create file in temp folder

8.
	a. Too many arguments, can create a call called MenuOptions
	
